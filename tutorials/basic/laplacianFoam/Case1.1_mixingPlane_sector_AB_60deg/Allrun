#!/bin/bash
#
#set -x

. $WM_PROJECT_DIR/bin/tools/RunFunctions

export caseName=`basename $PWD`

#We stop this script when we encounter a problem
#trap "exit -1" ERR

echo "$caseName: Creating the file blockMeshDict using m4"
(cd constant/polyMesh; m4 -P blockMeshDict.m4 > blockMeshDict)

echo "$caseName: Running blockMesh"
runApplicationAndReportOnError blockMesh

echo "$caseName: Updating the GGI and mixingPlane interfaces parameters"

# If not using pyFoamInitMixingPlaneInterface.py and pyFoamInitGgiInterface.py,
# a copy of a preconfigured boundary file is avaliable in
# constant/polyMesh/boundary.preconfigured

echo "Using pyFoamInitMixingPlaneInterface.py"
runApplicationAndReportOnError pyFoamInitMixingPlaneInterface.py . \
    B_UPSTREAM   B_DOWNSTREAM                    \
    --coordinateSystemType           cylindrical \
    --coordinateSystemOrigin         0 0 0       \
    --coordinateSystemE1             1 0 0       \
    --coordinateSystemE3             0 0 1       \
    --ribbonPatchDiscretisation      bothPatches \
    --ribbonPatchStackAxis           R           \
    --ribbonPatchSweepAxis           Theta

echo "Using pyFoamInitGgiInterface.py"
runApplicationAndReportOnError pyFoamInitGgiInterface.py . \
	sideWallA_BB_cyclic1 sideWallA_BB_cyclic2       \
	--type                   cyclicGgi              \
	--rotationAxis           0 0 1              \
	--rotationAngle          60

echo "$caseName: Creating the starting time directory"
cp -r 0_orig 0

echo "$caseName: Initializing the mixingPlane and GGI zones"
runApplicationAndReportOnError -l log.initMixingPlaneZones.sh ./initMixingPlaneZones.sh
runApplicationAndReportOnError -l log.initGgiZones.sh ./initGgiZones.sh

echo "$caseName: Running laplacianFoam"
runApplicationAndReportOnError laplacianFoam

